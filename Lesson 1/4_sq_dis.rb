# Задача 4
# Квадратное уравнение. Пользователь вводит 3 коэффициента a, b и с.
# Программа вычисляет дискриминант (D) и корни уравнения (x1 и x2, если они есть) и
# выводит значения дискриминанта и корней на экран.
# При этом возможны следующие варианты:
#   Если D > 0, то выводим дискриминант и 2 корня
#   Если D = 0, то выводим дискриминант и 1 корень (т.к. корни в этом случае равны)
#   Если D < 0, то выводим дискриминант и сообщение "Корней нет"
# Подсказка: Алгоритм решения с блок-схемой (www.bolshoyvopros.ru).
# Для вычисления квадратного корня, нужно использовать
# Math.sqrt
#  Например,
# Math.sqrt(16)
#   вернет 4, т.е. квадратный корень из 16.

puts "Вычисляем дискриминант и квадратные корни уравнения типа:\n ах^2 + bx + c = 0"

print ("Введите коэффициент a: ") # если puts надоел)
a = gets.chomp.to_i

print ("Введите коэффициент b: ") # если puts надоел)
b = gets.chomp.to_i

print ("Введите коэффициент c: ") # если puts надоел)
c = gets.chomp.to_i

disSquare =  b**2 - 4 * a * c # находим дискриминант

if disSquare < 0
  puts "Дискриминант уравнение с коефициентами a = #{a}, b = #{b}, c = #{c} равен #{disSquare}\n. Корней нет (мнимые числа)."
elsif disSquare == 0
  d  = Math.sqrt(disSquare)
  x = (- b + d) / (2 * a)
  puts "Дискриминант уравнение с коефициентами a: #{a}, b: #{b}, c: #{c} равен #{disSquare}\n. Корень уравнения один (x1 = x2) и равен #{x}."
elsif disSquare > 0 # можно сразу else, но так надежнее)
  d  = Math.sqrt(disSquare)  # можно и без Math.sqrt, заменив на d = d**0.5
  x1 = (- b + d) / (2 * a)
  x2 = (- b - d) / (2 * a)
  puts "Дискриминант уравнение с коефициентами a: #{a}, b: #{b}, c: #{c} равен #{disSquare}.\nКорни уравнения x1 = #{x1}; x2 = #{x2}."
else
  puts 'Unknown error'
end
# STDIN.getc # чтобы избежать проблем при запуске программы c переданным аргументом
# (http://ruby.qkspace.com/ruby-chem-gets-otlichaetsya-ot-stdin-gets)